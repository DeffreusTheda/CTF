#!/bin/sh
set -eo pipefail

##: Metadata
VERSION=v0.1.1
THIS=$(basename "$0") #: This script name

##: Utility functions
tolower() {
	echo "$@" | tr '[:upper:]' '[:lower:]'
}
#: Print to terminal with color
RED=1;     BOLDRED=9
GREEN=2;   BOLDGREEN=10
YELLOW=3;  BOLDYELLOW=11
BLUE=4;    BOLDBLUE=12
MAGENTA=5; BOLDMAGENTA=13
CYAN=6;    BOLDCYAN=14
WHITE=7;   BOLDWHITE=15
GRAY=8;    BLACK=16
echocolor() {
	echo $(tput setaf $1)$2$(tput sgr0)
}

##: Global Variables
CHALLNAME=$(basename "$(pwd)")
YEAR="${2:-$(date +%Y)}" #: Default to current year
#: Known CTFs challenge box format
#: Description
declare -A DESCRIPTION;
DESCRIPTION[PicoCTF]=""
DESCRIPTION[CompfestCTF]=""
DESCRIPTION[TCP1P]="# $CHALLNAME - TCP1P $YEAR\n\n###### $(xsel -ob | awk 'FNR==4;')\n\n## Description\n\n$(xsel -ob | head -n6 | tail -n +6)"
DESCRIPTION[vsCTF]="# $CHALLNAME - vsCTF $YEAR\n\n###### Author: $(xsel -ob | awk 'FNR==2;')\n\n## Description\n\n$(xsel -ob | awk 'FNR>3;' | grep -ve Flag -e Downloads)"
DESCRIPTION[UIUCTF]="# $CHALLNAME - UIUCTF $YEAR\n\n###### $(xsel -ob | awk 'FNR==6;')\n\n## Description\n\n$(xsel -ob | tail -n +8 | head -n -8)"
DESCRIPTION[DownUnderCTF]="# $CHALLNAME - UIUCTF $YEAR\n\n###### $(xsel -ob | rg 'Author: ')\n\n## Description\n\n$(xsel -ob | tail -n +6 | head -n -4)"
DESCRIPTION[AptosCodeCollisionCTF]="# $CHALLNAME - Aptos - Code Collision CTF $YEAR\n\n###### $(xsel -ob | rg 'author: ')\n\n## Description\n\n$(xsel -ob | tail -n +5 | head -n -4)"
#: Writeup
declare -A WRITEUP;
WRITEUP[PicoCTF]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - PicoCTF $YEAR\n\n###### $(xsel -ob | awk 'FNR==2;' | rg -i 'AUTHOR: ')\n\n## Description\n\n$(xsel -ob | tail -n +5 | head -n -7)"
WRITEUP[CompfestCTF]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - CompfestCTF $YEAR\n\n###### $(xsel -ob | rg 'Author: ')\n\n## Description\n\n$(xsel -ob | head -n -8 | tail -n +3)"
WRITEUP[TCP1P]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - TCP1P $YEAR\n\n## Recon\n\n\n## About the Vulnerability\n\n## Exploitation\n\n\n## Conclusion\n\n"
WRITEUP[vsCTF]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - vsCTF $YEAR\n\n## Recon\n\n\n## About the Vulnerability\n\n## Exploitation\n\n\n## Conclusion\n\n"
WRITEUP[UIUCTF]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - UIUCTF $YEAR\n\n"
WRITEUP[DownUnderCTF]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - DownUnderCTF $YEAR\n\n"
WRITEUP[AptosCodeCollisionCTF]="# $CHALLNAME Writeup by ${CTFUSERNAME:-$USER} - Aptos - Code Collision CTF $YEAR\n\n"
CTF="$1"

##: Code Functions
#: Print usage information and quit with first argument as exit code
printhelp() {
	echo 'usage: '$THIS' <CTF> [Year]'
	echo '       '$THIS' -V'
	echo '	use '$THIS' on directory named after the challenge'
	echo
	echo 'Supported CTFs:'
	echo -ne '\t' && for OBJ in "${!DESCRIPTION[@]}"; do echo -n "$OBJ "; done
	echo 'Options:'
	echo '	-V, --version     print version then exit'
	exit $1
}

##: Options
while getopts ":V-" OPT; do
	case $OPT in
	V) echo $VERSION && exit 0 ;;
	-) #: Long options
		case $OPTARG in
		version) echo $VERSION && exit 0 ;;
		*) echocolor $RED "$THIS: Unknown option --$OPTARG" && printhelp 1 ;;
		esac
		;;
	\?) echocolor $RED "$THIS: Unknown option -$OPT" && printhelp 1 ;;
	esac
done
shift $((OPTIND - 1)) #: Shift remaining arguments after flag parsing

##: Main
for KNOWNCTF in "${!DESCRIPTION[@]}"; do
	if [[ $(tolower $KNOWNCTF) == $(tolower $CTF) ]]; then
		if [[ -n ${DESCRIPTION[$KNOWNCTF]} ]]; then
			echo -e ${DESCRIPTION[$KNOWNCTF]} >Description.md
		fi
		echo -e ${WRITEUP[$KNOWNCTF]} >README.md
		FOUND=1
	fi
done
#: Late error check
if [[ ${FOUND:-0} -eq 0 ]]; then
	echocolor $RED "$THIS: Unknown CTF: $1" && printhelp 1
fi

nvim *.md
